diff --git a/fs/jffs2/file.c b/fs/jffs2/file.c
index bd7d58d27bfc..8fa9ffa90be8 100644
--- a/fs/jffs2/file.c
+++ b/fs/jffs2/file.c
@@ -143,7 +143,7 @@ static int jffs2_write_begin(struct file *filp, struct address_space *mapping,

        jffs2_dbg(1, "%s()\n", __func__);

-       if (pageofs > inode->i_size) {
+       if (pos > inode->i_size) {
                /* Make new hole frag from old EOF to new page */
                struct jffs2_raw_inode ri;
                struct jffs2_full_dnode *fn;
@@ -170,10 +170,10 @@ static int jffs2_write_begin(struct file *filp, struct address_space *mapping,
                ri.mode = cpu_to_jemode(inode->i_mode);
                ri.uid = cpu_to_je16(i_uid_read(inode));
                ri.gid = cpu_to_je16(i_gid_read(inode));
-               ri.isize = cpu_to_je32(max((uint32_t)inode->i_size, pageofs));
+               ri.isize = cpu_to_je32((uint32_t)pos);
                ri.atime = ri.ctime = ri.mtime = cpu_to_je32(JFFS2_NOW());
                ri.offset = cpu_to_je32(inode->i_size);
-               ri.dsize = cpu_to_je32(pageofs - inode->i_size);
+               ri.dsize = cpu_to_je32((uint32_t)pos - inode->i_size);
                ri.csize = cpu_to_je32(0);
                ri.compr = JFFS2_COMPR_ZERO;
                ri.node_crc = cpu_to_je32(crc32(0, &ri, sizeof(ri)-8));
